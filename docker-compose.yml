version: '3.8'
services:
  api:
    container_name: Home-library
    image: balanovskyi/home-library-api
    build: 
      dockerfile: Dockerfile
      context: .
    depends_on:
      - database
    restart: always
    environment:
      - PORT=${PORT}
    volumes:
        - ./src:/app/src
        - ./logs:/app/logs
        - node_modules:/app/node_modules
    ports:
      - ${PORT}:${PORT}
    networks:
     - homeLibNet
    command: npm run start:dev
  database:
    container_name: postgreSQL
    image: balanovskyi/postgres-database
    build: 
      dockerfile: ./database/Dockerfile
      context: .
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DATABASE}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - postgres_logs:/var/log/postgresql
    ports:
      - ${POSTGRES_HOST_PORT}:${POSTGRES_CONTAINER_PORT}
    networks:
     - homeLibNet
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 10
    command: postgres -c logging_collector=on -c log_statement=all
volumes:
  node_modules:
  postgres_logs:
  postgres_data:
networks:
   homeLibNet:
     name: homeLibNet
     driver: bridge